substitutions:
  disp_name: Energy Meter  # Change the disp_name to something you want
  update_time: 10s  # Interval of how often the power is updated
  devicename: energymeter  #The device's name, MUST BE LOWERCASE!!!!
  
esphome:
  name: $devicename
esp32:
  board: nodemcu-32s

wifi:
  ssid: !secret wifi_ssid  #either place in your "Secrets" file or put the desired information
  password: !secret wifi_password #either place in your "Secrets" file or put the desired information
  manual_ip:  # Static IP address information.  Recomended to be set for your devices but can be commented out (#) to use DHCP.
    static_ip: #!secret ip_address_energymeter
    gateway: #!secret ip_gateway
    subnet: #!secret ip_subnet  Generally 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${disp_name} Hotspot"
    password: !secret ap_password #either place in your "Secrets" file or put the desired information
  reboot_timeout: 0s #Prevents the ESP from rebooting at odd times

captive_portal:

#mqtt:  # Comment out this section if using API with (#) 
#  broker: !secret mqtt_broker
#  username: !secret mqtt_user
#  password: !secret mqtt_pass

api: #now requried by ESPhome
  encryption:  
    key: !secret api_key  #insert an encryption key or place it in your "Secrets" file

ota:  #now requried by ESPhome
  - platform: esphome
    password: !secret ota_password #insert an Over The Air update password or place it in your "Secrets" file

logger:

web_server:  
  port: 80

time:  #Pull current time information SNTP must be used if API is disabled above.  Recommend using API if your devices will not have internet access!!
#  - platform: sntp  #Use NTP time protocol.  This will automatically pull time information on bootup from default NTP servers.
#    id: sntp_time
    
  - platform: homeassistant  #Use current HomeAssistant time.  This will automatically pull time from HomeAssistant on a regular basis though the API.
    id: homeassistant_time

spi:
  clk_pin: 18
  miso_pin: 19
  mosi_pin: 23

sensor:  #  I suggest using CT1 and CT2 for grid power with CT3 and CT4 for solar power.
  - platform: wifi_signal
    name: ${disp_name} WiFi Signal
    filters:
    - sliding_window_moving_average:
        window_size: 15
        send_every: 15
  - platform: atm90e32
    cs_pin: 5
    phase_a:
      voltage:
        name: ${disp_name} Volts 1
        accuracy_decimals: 1
      current:
        name: ${disp_name} CT1 Amps
        id: "ct1Amps"
      power:
        name: ${disp_name} CT1 Watts
        accuracy_decimals: 1
        id: "ct1Watts"
        filters:  # If the wattage is backwards due to the phase 180 degrees from the clamp direction
          - multiply: -1.0
      gain_voltage: 4100  # Voltage calibration  https://esphome.io/components/sensor/atm90e32.html#calibration
      gain_ct: 39473  # Current calibration  
    phase_c:
      current:
        name: ${disp_name} CT2 Amps
        id: "ct2Amps"
      power:
        name: ${disp_name} CT2 Watts
        accuracy_decimals: 1
        id: "ct2Watts"
#        filters:  # If the wattage is backwards due to the phase 180 degrees from the clamp direction
#          - multiply: -1.0
      gain_voltage: 4100  # Voltage calibration  https://esphome.io/components/sensor/atm90e32.html#calibration
      gain_ct: 39473  # Current calibration
    frequency:
      name: ${disp_name} Freq 1
    line_frequency: 60Hz
    gain_pga: 2X
    update_interval: ${update_time}
  - platform: atm90e32
    cs_pin: 4
    phase_a:
      voltage:
        name: ${disp_name} Volts 2
        accuracy_decimals: 1
      current:
        name: ${disp_name} CT3 Amps
        id: "ct3Amps"
      power:
        name: ${disp_name} CT3 Watts
        accuracy_decimals: 1
        id: "ct3Watts"
        filters:  # If the wattage is backwards due to the phase 180 degrees from the clamp direction
          - multiply: -1.0
      gain_voltage: 4000  # Voltage calibration  https://esphome.io/components/sensor/atm90e32.html#calibration
      gain_ct: 39473  # Current calibration  
    phase_c:
      current:
        name: ${disp_name} CT4 Amps
        id: "ct4Amps"
      power:
        name: ${disp_name} CT4 Watts
        accuracy_decimals: 1
        id: "ct4Watts"
        filters:  # If the wattage is backwards due to the phase 180 degrees from the clamp direction
          - multiply: -1.0
      gain_voltage: 3850  # Voltage calibration  https://esphome.io/components/sensor/atm90e32.html#calibration
      gain_ct: 39473  # Current calibration
    frequency:
      name: ${disp_name} Freq 2
    line_frequency: 60Hz
    gain_pga: 2X
    update_interval: ${update_time}
    
#Grid Watts and Amps!!
  - platform: template
    name: ${disp_name} Total Amps 1
    id: "totalAmps"
    lambda: return id(ct1Amps).state + id(ct2Amps).state;
    accuracy_decimals: 2
    unit_of_measurement: A
    update_interval: ${update_time}
    icon: "mdi:current-ac"
  - platform: template
    name: ${disp_name} Total Watts 1
    id: "totalWatts"
    lambda: return id(ct1Watts).state + id(ct2Watts).state;
    accuracy_decimals: 0
    unit_of_measurement: W
    icon: "mdi:lightning-bolt-outline"
    update_interval: ${update_time}
    
    
#  Solar Watts and Amps!!
  - platform: template
    name: ${disp_name} Total Amps 2
    id: "totalAmps2"
    lambda: return id(ct3Amps).state + id(ct4Amps).state;
    accuracy_decimals: 2
    unit_of_measurement: A
    update_interval: ${update_time}
    icon: "mdi:current-ac"
  - platform: template
    name: ${disp_name} Total Watts 2
    id: "totalWatts2"
    lambda: return id(ct3Watts).state + id(ct4Watts).state;
    accuracy_decimals: 0
    unit_of_measurement: W
    icon: "mdi:lightning-bolt-outline"
    update_interval: ${update_time}
    
# Daily Energy Section    
  - platform: total_daily_energy
    name: ${disp_name} Total kWh 1
    power_id: totalWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    icon: "mdi:transmission-tower"
  - platform: total_daily_energy
    name: ${disp_name} Total kWh 2
    power_id: totalWatts2
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    icon: "mdi:solar-power"

switch:  #Shows a "Toggle" button on the Web Page to restart the device.
  - platform: restart
    name: ${disp_name} Restart
